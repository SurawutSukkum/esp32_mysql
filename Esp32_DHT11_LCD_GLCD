#include <WiFi.h>
#include <HTTPClient.h>
#include <WiFiClient.h>
#include <Wire.h>               // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306Wire.h"        // legacy: #include "SSD1306.h"
#include "DHT.h"
#include <LCD_I2C.h>



// Initialize the OLED display using Arduino Wire:
SSD1306Wire display(0x3c, SDA, SCL);  

LCD_I2C lcd(0x27);

#define DHTPIN 4 
#define DHTTYPE DHT11   // DHT 11
DHT dht(DHTPIN, DHTTYPE);

const char* ssid = "TESTESP";// เปลี่ยน ssid ก่อนทดลอง
const char* password = "a1234567";// เปลี่ยน password ก่อนทดลอง

#define WiFi_Logo_width 60
#define WiFi_Logo_height 36
const uint8_t WiFi_Logo_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xE0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF,
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
  0xFF, 0x03, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF, 0x07, 0xC0, 0x83, 0x01, 0x80, 0xFF, 0xFF, 0xFF,
  0x01, 0x00, 0x07, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0C, 0x00,
  0xC0, 0xFF, 0xFF, 0x7C, 0x00, 0x60, 0x0C, 0x00, 0xC0, 0x31, 0x46, 0x7C,
  0xFC, 0x77, 0x08, 0x00, 0xE0, 0x23, 0xC6, 0x3C, 0xFC, 0x67, 0x18, 0x00,
  0xE0, 0x23, 0xE4, 0x3F, 0x1C, 0x00, 0x18, 0x00, 0xE0, 0x23, 0x60, 0x3C,
  0x1C, 0x70, 0x18, 0x00, 0xE0, 0x03, 0x60, 0x3C, 0x1C, 0x70, 0x18, 0x00,
  0xE0, 0x07, 0x60, 0x3C, 0xFC, 0x73, 0x18, 0x00, 0xE0, 0x87, 0x70, 0x3C,
  0xFC, 0x73, 0x18, 0x00, 0xE0, 0x87, 0x70, 0x3C, 0x1C, 0x70, 0x18, 0x00,
  0xE0, 0x87, 0x70, 0x3C, 0x1C, 0x70, 0x18, 0x00, 0xE0, 0x8F, 0x71, 0x3C,
  0x1C, 0x70, 0x18, 0x00, 0xC0, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x08, 0x00,
  0xC0, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x0C, 0x00, 0x80, 0xFF, 0xFF, 0x1F,
  0x00, 0x00, 0x06, 0x00, 0x80, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x07, 0x00,
  0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0xF8, 0xFF, 0xFF,
  0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x01, 0x00, 0x00,
  0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF,
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x1F, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  };
  
void WIFI_image() {

    display.drawXbm(34, 14, WiFi_Logo_width, WiFi_Logo_height, WiFi_Logo_bits);
}


void setup() {
  
  Serial.begin(115200);
  delay(500);
  display.init();
  display.flipScreenVertically();
  display.clear();
  WIFI_image();
  display.display();
  
  lcd.begin();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0); 
  lcd.print("WIFI CONNECT");
    
  WiFi.begin(ssid, password);
  Serial.println("");
  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  };
  

  delay(1000);
  Serial.println("");
  Serial.print("Successfully connected to : ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  dht.begin();



}

void loop() {
    
 

  String url_post = "https://mysensor-test.herokuapp.com/data";
  Serial.println();
  Serial.println("Get content from " + url_post);

  int h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  int t = dht.readTemperature();
  
  
  HTTPClient http;
  
  // Send data to database
  http.begin(url_post);
  Serial.println(url_post); // show url  
  http.addHeader("Content-Type", "application/json");
  String test = "{\"sensor_id\":\"1\",\"measurement_value\":"+String(t)+"}"; // Temperature
  Serial.println(test); // show url
  int httpCode = http.POST( test);
  
//  int httpCode = http.GET();
  if (httpCode == 200) {
    String content = http.getString();
    Serial.println("Content ---------");
    Serial.println(content);
    Serial.println("-----------------");
  } else {
    Serial.println("Fail. error code " + String(httpCode));
  }
  Serial.println("END POST");
  
  // Send data to database
  http.begin(url_post);
  Serial.println(url_post); // show url  
  http.addHeader("Content-Type", "application/json");
   test = "{\"sensor_id\":\"2\",\"measurement_value\":"+String(h)+"}"; // Huminity
  Serial.println(test);
  httpCode = http.POST( test);
  
//  int httpCode = http.GET();
  if (httpCode == 200) {
    String content = http.getString();
    Serial.println("Content ---------");
    Serial.println(content);
    Serial.println("-----------------");
  } else {
    Serial.println("Fail. error code " + String(httpCode));
  }
  Serial.println("END POST");
  
  // Read to check data after send to database
  String url_get = "https://mysensor-test.herokuapp.com/data?id=1";
  http.begin(url_get);
  Serial.println(url_get);
  httpCode = http.GET();
  if (httpCode == 200) {
    String content = http.getString();
    Serial.println("Content ---------");
    Serial.println(content);
    Serial.println("-----------------");
    lcd.clear();
    //[{"sensor_id":1,"measurement_value":29,"date_time":"2021-05-05T13:31:35.000Z"}]
    lcd.setCursor(0, 0); 
    lcd.print("sensor_id:");
    lcd.print(content[14]);lcd.print("  ");
    lcd.setCursor(0, 1); 
    lcd.print("value:");
    lcd.print(content[36]);
    lcd.print(content[37]);lcd.print("  ");
    
    display.clear();    
    display.setTextAlignment(TEXT_ALIGN_LEFT);
    display.setFont(ArialMT_Plain_16);
    display.drawString(0, 0,"HTTP CODE:");
    display.drawString(100, 0,String(httpCode));
    display.drawString(0, 15,"sensor_id:");
    display.drawString(80, 15,String(content[14]));
    display.drawString(0, 35,"value:");
    display.drawString(50, 35,String(content[36]));    
    display.drawString(60, 35,String(content[37]));        
    display.display(); 

  } else {
    Serial.println("Fail. error code " + String(httpCode));
  }
  Serial.println("END GET");
   delay(3000); 
    // Read to check data after send to database
   url_get = "https://mysensor-test.herokuapp.com/data?id=2";
  http.begin(url_get);
  Serial.println(url_get);
  httpCode = http.GET();
  if (httpCode == 200) {
    String content = http.getString();
    Serial.println("Content ---------");
    Serial.println(content);
    Serial.println("-----------------");
    lcd.clear();
    //[{"sensor_id":1,"measurement_value":29,"date_time":"2021-05-05T13:31:35.000Z"}]
    lcd.setCursor(0, 0); 
    lcd.print("sensor_id:");
    lcd.print(content[14]);lcd.print("   ");
    lcd.setCursor(0, 1); 
    lcd.print("value:");
    lcd.print(content[36]);
    lcd.print(content[37]);lcd.print("   ");
    
    display.clear();    
    display.setTextAlignment(TEXT_ALIGN_LEFT);
    display.setFont(ArialMT_Plain_16);
    display.drawString(0, 0,"HTTP CODE:");
    display.drawString(100, 0,String(httpCode));
    display.drawString(0, 15,"sensor_id:");
    display.drawString(80, 15,String(content[14]));
    display.drawString(0, 35,"value:");
    display.drawString(50, 35,String(content[36]));    
    display.drawString(60, 35,String(content[37]));        
    display.display(); 
    
  } else {
    Serial.println("Fail. error code " + String(httpCode));
  }
  Serial.println("END GET");
  delay(3000); 
    
 
 

    
  }
  
